{"version":3,"sources":["draftLottery/TableRow.js","draftLottery/Table.js","draftLottery/RowEntry.js","draftLottery/Results.js","draftLottery/generate.js","draftLottery/artifacts/sticks.svg","draftLottery/DraftMainScreen.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["TableRow","columnText","inputValue","onInputValueChanged","onButtonClicked","useState","value","setValue","type","onChange","event","target","onClick","Table","data","onUpdate","onDelete","className","map","row","percentage","name","id","RowEntry","onAdd","style","marginLeft","Results","results","item","generate","initialData","resultsList","selected","total","i","length","Number","threshold","Math","random","selectWeightedItem","filter","push","DraftMainScreen","setData","setResults","src","sticks","alt","team","index","runLottery","width","idIndex","findIndex","updateItem","removeItem","NavBar","to","App","exact","path","component","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04fd404a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TableRow = ({\r\n  columnText,\r\n  inputValue,\r\n  onInputValueChanged,\r\n  onButtonClicked\r\n}) => {\r\n  const [value, setValue] = useState(inputValue || '');\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <p>{columnText}</p>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={event => {\r\n            setValue(event.target.value);\r\n            onInputValueChanged(event.target.value);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={onButtonClicked}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport TableRow from './TableRow';\r\n\r\nconst Table = ({ data, onUpdate, onDelete }) => {\r\n  return (\r\n    <div>\r\n      <table className=\"\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Team Name\r\n            </th>\r\n            <th>\r\n              Percentage\r\n            </th>\r\n            <th>\r\n              Action\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(row => {\r\n            const percentage = row.percentage;\r\n            return (\r\n              <TableRow\r\n                key={row.id}\r\n                columnText={row.name}\r\n                inputValue={percentage === 0 ? '' : percentage}\r\n                onInputValueChanged={value => {\r\n                  onUpdate(row.id, value);\r\n                }}\r\n                onButtonClicked={() => {\r\n                  onDelete(row.id);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n          \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;","import React, { useState } from 'react';\r\n\r\nconst RowEntry = ({ onAdd }) => {\r\n  const [value, setValue] = useState('');\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event => setValue(event.target.value)}\r\n      />\r\n      <button\r\n        style={{ marginLeft: 8 }}\r\n        onClick={() => {\r\n          onAdd(value);\r\n          setValue('');\r\n        }}\r\n      >\r\n        Add Team\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RowEntry;","import React from 'react';\r\n\r\nconst Results = ({ results }) => {\r\n  return (\r\n    <ul>\r\n      {results.map(item => {\r\n        return <li>{item}</li>\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Results;","/**\r\n * Returns a random item from the data based on its weight\r\n */\r\nconst selectWeightedItem = data => {\r\n  let total = 0;\r\n  for (let i = 0; i < data.length; ++i) {\r\n    total += Number(data[i].percentage);\r\n  }\r\n\r\n  const threshold = Math.random() * total;\r\n\r\n  total = 0; \r\n  for (let i = 0; i < data.length - 1; ++i) {\r\n    total += Number(data[i].percentage);\r\n    if (total >= threshold) {\r\n      return data[i].name;\r\n    }\r\n  }\r\n\r\n  // default value\r\n  return data[data.length - 1].name;\r\n};\r\n\r\nconst generate = data => {\r\n  let initialData = data;\r\n  const resultsList = [];\r\n\r\n  while(initialData.length > 0) {\r\n    const selected = selectWeightedItem(initialData);\r\n    initialData = initialData.filter(item => {\r\n      return item.name !== selected;\r\n    })\r\n\r\n    resultsList.push(selected);\r\n  }\r\n\r\n  return resultsList;\r\n};\r\n\r\nexport { generate };","export default __webpack_public_path__ + \"static/media/sticks.e6a127f3.svg\";","import React, { useState } from 'react';\r\nimport Table from './Table';\r\nimport RowEntry from './RowEntry';\r\nimport Results from './Results';\r\nimport { generate } from './generate.js';\r\nimport sticks from './artifacts/sticks.svg';\r\nimport './DraftMainScreen.css';\r\n\r\nconst DraftMainScreen = () => {\r\n  const [data, setData] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n\r\n  const updateItem = (id, value, data) => {\r\n    const idIndex = data.findIndex(item => item.id === id);\r\n    data[idIndex] = { ...data[idIndex], percentage: value };\r\n    return data;\r\n  };\r\n\r\n  const removeItem = (id, data) => {\r\n    return data.filter(item => item.id !== id);\r\n  };\r\n\r\n  const runLottery = () => {\r\n    const results = generate(data);\r\n    setResults(results);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={sticks} className=\"App-logo\" alt=\"logo\" />\r\n      </header>\r\n      <body className=\"App-body\">\r\n        <div className=\"Top-Row\">\r\n          <RowEntry\r\n            onAdd={team => {\r\n              const index = data.length;\r\n              setData([...data, { id: index, name: team, percentage: 0 }]);\r\n            }}\r\n          />\r\n          <button onClick={() => setData([])}>Clear All</button>\r\n          <button onClick={() => runLottery()}>Run Lottery</button>\r\n        </div>\r\n        <hr style={{ width: '100%' }}/>\r\n        <Table\r\n          data={data} \r\n          onUpdate={(id, value) => {\r\n            setData(updateItem(id, value, data));\r\n          }}\r\n          onDelete={id => {\r\n            setData(removeItem(id, data));\r\n          }}\r\n        />\r\n        <Results results={results} />\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftMainScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <h5>gma00</h5>\r\n      <ul>\r\n        <li><Link to=\"/About\">About</Link></li>\r\n        <li><Link to=\"/Draft\">Draft</Link></li>\r\n     \t</ul>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport DraftMainScreen from './draftLottery/DraftMainScreen';\r\nimport './App.css';\r\nimport NavBar from './NavBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Routes>\r\n        <Route exact path=\"/About\" component={<DraftMainScreen/>} />\r\n        <Route exact path=\"/Draft\" element={<DraftMainScreen/>} />\r\n        <Route exact path=\"/\" element={<DraftMainScreen/>} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}